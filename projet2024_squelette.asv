clear
%lecture des données 
%[nbProduits, nbClients, capaProd, capaCrossdock, demande, a, b, penalite, coutStockUsine, coutCamionUsine, coutCamionClient] = lireFichier('instanceExemple.dat');
load('variables.mat')
%% 

%exemple d'appel à la résolution du modèle
[solution, fval] = optimProd(1,nbProduits, nbClients, capaProd, capaCrossdock, demande, a, b, penalite, coutStockUsine, coutCamionUsine, coutCamionClient);



%%%% PROGRAMMATION DES MODELES (à compléter)%%%%%%%%%%%%%%%
function [solution, fval] = optimProd(modele, nbProduits, nbClients, capaProd, capaCrossdock, demande, a, b, penalite, coutStockUsine, coutCamionUsine, coutCamionClient)

    %fval=[] ; % ligne à enlever quand un premier modèle sera codé       
    %solution=[] ;% ligne à enlever quand un premier modèle sera codé
    T=30;
    if modele==1
        %C'est pour la premiere partie du sujet
        problem=optimproblem("ObjectiveSense","minimize");
        %Variables de décisions
        x=optimvar('x',nbProduits,T,LowerBound=0);
        s=optimvar('s',nbProduits,T,LowerBound=0);
        y=optimvar('y',nbProduits,nbClients,T,LowerBound=0);
        %Fonction Objective
        coutStockage=0;
        for i  = 1:nbProduits
            for t = 1:T
                coutStockage = coutStockage+ coutStockUsine(i)*s(i,t);
            end
        end
        coutPenaliteLivraison=0;
        for i = 1:nbProduits
            for j = 1 : nbClients
                for t = 1:T
                    coutPenaliteLivraison=coutPenaliteLivraison + ((t<a(j))*(a(j)-t)*penalite(j) + (t>b(j))*(t-b(j))*penalite(j))*y(i,j,t);
                end
            end
        end
        funcObjective=coutStockage+coutPenaliteLivraison;
        problem.Objective=funcObjective;
        %Contraintes
        %Capacité de production
        for i = 1:nbProduits
            for t = 1:T
                problem.Constraints.("capacite_"+i+"_"+t)= x(i,t)<=capaProd(i);
            end
        end
        %Equilibre de stock
        for i = 1:nbProduits
            for t = 1:T-1
                somme=0;
                for j=1:nbClients
                    somme=somme+y(i,j,t+1);
                end
                problem.Constraints.("equilibre_"+i+"_"+t)= s(i,t+1)==s(i,t)+x(i,t+1)-somme;
            end
        end
        %Satisfaction des clients
        for i = 1:nbProduits
            for j = 1:nbClients
                somme=0;
                for t=1:T
                    somme=somme+y(i,j,t);
                end
                problem.Constraints.("satisfaction_"+i+"_"+t)= demande(i,j) ==somme;
            end
        end
        %Capacite Entrepôt
        for t=1:T
            somme=0;
            for i=1:nbProduits
                for j=1:nbClients
                    somme=somme+y(i,j,t);
                end
            end
            problem.Constraints.("capacite_entrepot_"+t)=somme<=capaCrossdock;
        end
        %show(problem)
        x0.x=zeros(nbProduits,T);
        x0.s=zeros(nbProduits,T);
        x0.y=zeros(nbProduits,nbClients,T);
        [solution,fval]=solve(problem,x0);
        fprintf("%d",fval);
    elseif modele==2
        %TODO : compléter avec le code de IP1
        fprintf("Pour l'instant, le modèle IP1 n'est pas codé \n"); % ligne à enlever 
    elseif modele==3 
         %TODO : compléter avec le code de IP2
        fprintf("Pour l'instant, le modèle IP2 n'est pas codé \n"); % ligne à enlever 
    else 
        fprintf("Le paramètre modele devrait valoir 1, 2 ou, 3 \n ")
    end
    
end


%%% A compléter
function plotOptim(nbProduits, nbClients, capaProd, capaCrossdock, demande, a, b, penalite, coutStockUsine, coutCamionUsine, coutCamionClient)
    %TODO : à compléter
     fprintf("Pour l'instant, la fonction n'est pas codée \n"); % ligne à enlever      
end

%%%%%%%FONCTION DE PARSAGE (ne pas modifier)%%%%%%%%
function [nbProduits, nbClients, capaProd, capaCrossdock, demande, a, b, penalite, coutStockUsine, coutCamionUsine, coutCamionClient]=lireFichier(filename)
% lecture du fichier de données
instanceParameters = fileread(filename);
% suppression des éventuels commentaires
instanceParameters = regexprep(instanceParameters, '/\*.*?\*/', '');
% évaluation des paramètres
eval(instanceParameters);
end


